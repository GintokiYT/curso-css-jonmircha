/* Reglas CSS consta de 2 partes
1. El selector
2. Bloque de declaraciones : {
    atributo: valor;
    atributo-de-mas-dos-palabras: otro-valor;
    }
*/

/* LLamar a otra hoja de estilo */
@import url(otra-hoja.css);
/* Sinembargo es una mala practica! */

h1{
    color: orangered;
    background-color: rgb(51, 51, 51);
}

/* 
  Links de referencia y documentaci√≥n
  https://es.wikipedia.org/wiki/Hoja_de_estilos_en_cascada
  https://www.w3.org/html/logo/
  https://www.w3.org/standards/webdesign/htmlcss.html
  https://www.w3.org/TR/css-2020/
  https://developer.mozilla.org/es/docs/Web/CSS
  https://cssreference.io/
  https://caniuse.com/
  https://codeguide.co/
*/

/*
Selectores basicos
1) Etiquetas - son elementos html
2) Identificadores - atributo id - #
3) Clases - atributo class - .
*/
p{
    color: midnightblue;
}

/* Dar estilos con ID se considera un anti-patr√≥n es una mala practica */
#parrafo-dos{
    background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro codigo CSS */
.text-20{
    font-size: 20px;
}
.text-32{
    font-size: 32px;
}
.bg-skyblue{
    background-color: skyblue;
}
.bg-steelblue{
    background-color: steelblue;
}
.text-white{
    color: white;
}

/* Selectores Avanzandos */
/* Hijos directos - Solo aplica en el primer nivel */
.hijos-directos > li{
    background-color: thistle;
}

.hijos-descendientes b{
    background-color: thistle;
}

/* Los selectores de hermanos van aplicar a los elementos que son hermanos y que esten por debajo del elemento de referencia */
.hermanos-general ~ li{
    background-color: thistle;
}

.hermanos-adyacentes + li{
    background-color: thistle;
}

/* Selectores de atributos */
.selectores-atributos a[href]{
    color: orangered;
}

.selectores-atributos a[target="_blank"]{
    font-weight: bold;
}

/* El comodin del "*" aplica el estilo si contiene el texto en cuesti√≥n */
.selectores-atributos a[href*="jonmircha"]{
    font-size: 24px;
}

/* El comodin del "^" aplica el estilo si contiene el texto en cuesti√≥n al inicio */
.selectores-atributos a[href^="http://"]{
    text-decoration: none;
}

/* El comodin del "$" aplica el estilo si contiene el texto en cuesti√≥n al final */
.selectores-atributos a[href$=".com"]{
    background-color: black;
}

/* El comodin de la "~" aplica el estilo si contiene el texto en cuestion en una lista separada por espacios */
.selectores-atributos a[class~="cursos"]{
    background-color: midnightblue;
}

/* El comodin de la "|" aplica el estilo si contiene el texto en cuestion en una lista separada por espacios y que despues del texto en cuesti√≥n pueda venir un "-" */
.selectores-atributos a[class|="menu"]{
    font-style: italic;
}

/* Selector universal */
*{
    font-family: sans-serif;
}
.selector-universal *{
    font-size: 24px;
}

/*
Pseudoelementos - Dan estilos a partes espec√≠ficas de un elemento, se usa el :: para diferenciarlos de las pseudoclases
https://developer.mozilla.org/es/docs/Web/CSS/Pseudoelementos
*/

.form-pseudoclases *:required{
    border-color: yellow;
}

.form-pseudoclases *:valid{
    border-color: green;
}

.form-pseudoclases *:invalid{
    border-color: red;
}

.form-pseudoclases *:focus{
    background-color: skyblue;
}

.form-pseudoclases *:disabled{
    background-color: pink;
}

.menu-pseudoclases a:visited{
    color: olive;
}

.menu-pseudoclases a:hover{
    color: orange;
}

.p-pseudoclases:hover{
    font-size: 20px;
}

#temario-css:target{
    background-color: lightseagreen;
}

.lista-pseudoclases li:first-child{
    color: green;
}

.lista-pseudoclases li:last-child{
    color: violet;
}

.lista-pseudoclases li:nth-child(3){
    color: navy;
}

.lista-pseudoclases li:nth-child(4n){
    font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n +1){
    font-weight: bold;
}

.lista-pseudoclases li:nth-child(even){
    background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd){
    background-color: orange;
}

.articulo-pseudoclases p:first-of-type{
    background-color: pink;
}

.articulo-pseudoclases p:last-of-type{
    background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(3){
    background-color: fuchsia;
}

.articulo-pseudoclases *:not(p){
    background-color: beige;
}

/*
Pseudoelementos - Dan estilos a partes espec√≠ficas de un elemento, se usa el :: para diferenciarlos de las pseudoclases
https://developer.mozilla.org/es/docs/Web/CSS/Pseudoelementos
*/

.saga-geminis::before{
    content: "ü§º‚Äç‚ôÇÔ∏è";
}

.saga-geminis::after{
    content: "‚ôä";
}

.saga-precio::before{
    content: "$";
    font-weight: bold;
}

.saga-precio::after{
    content: "USD";
    font-weight: bold;
}

.p-pseudoelementos::first-letter{
    font-weight: bold;
    font-size: 32px;
}

.p-pseudoelementos::first-line{
    color: coral;
}

.p-pseudoelementos::selection{
    color: greenyellow;
    background-color: black;
}

.input-pseudoelementos::placeholder{
    color: green;
}

/* Agrupar selectores */
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea{
    border-color: yellow;
    border-width: 2px;
    border-style: dashed;
    background-color: black;
    font-size: 20px;
    display: block;
    width: 300px;
    color: white;
}

/* 
El Algoritmo de CSS: Es la forma en que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocasiones se sobreescriben las reglas CSS.

  1) La Cascada.
  2) La Especificidad.
  3) La Herencia.

La Cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:
  1) El Origen del C√≥digo:
    - El User Agent (los estilos por defecto del navegador)
    - Personalizaciones del usuario.
    - Los estilos del autor.
  2) La Especificidad del Selector
  3) Orden de Aparici√≥n
  
La Especificidad es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma:

  Etiquetas y pseudoelementos -------------- 0,0,0,1
  Clases, atributos y pseudoclases ------------0,0,1,0
  Identificadores -------------------------------0,1,0,0
  Estilos en l√≠nea--------------------------------1,0,0,0
  !important ------------------Rompe la especificidad

La Herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial
https://web.dev/learn/css/inheritance/#which-properties-are-inheritable
*/
blockquote#cita-marco.cita-marco{
    background-color: lightsteelblue;
}

blockquote{
    background-color: burlywood;
}

#cita-marco{
    background-color: lightgreen;
}

blockquote.cita-marco{
    background-color: tomato;
}

.cita-marco{
    background-color: cornflowerblue;
}

/* Usando el !important */
.cita-marco{
   background-color: mediumaquamarine !important; 
}

blockquote#cita-marco{
    background-color: lightsalmon
}

.cita-marco{
    background-color: moccasin !important;
    background-color: darkorange !important;
    font-size: 32px;
    border-style: dotted;
    border-color: red;
}

.cita-marco cite{
    background-color: pink;
    background-color: inherit;
    font-size: 24px;
    font-size: initial;
    border-style: inherit;
    border-color: inherit;
}

/* 
https://autoprefixer.github.io/
https://caniuse.com/
Prefijos de los navegadores
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
*/
